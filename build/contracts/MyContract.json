{
  "contractName": "MyContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_message",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_policyAddress",
          "type": "address"
        }
      ],
      "name": "votedEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "persons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "credits",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numPolcies",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "details",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "beneficiary",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "framer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "creditPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteCountFor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votecountAgainst",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "policymakers",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "constituency",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_personAddress",
          "type": "address"
        }
      ],
      "name": "addPerson",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policymakerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_constituency",
          "type": "uint256"
        }
      ],
      "name": "addPolicymaker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_framer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_beneficiary",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_details",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_credits",
          "type": "uint256"
        }
      ],
      "name": "addPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_personAddress",
          "type": "address"
        }
      ],
      "name": "enrollPerson",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyAddress",
          "type": "address"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_policyAddress\",\"type\":\"address\"}],\"name\":\"votedEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_personAddress\",\"type\":\"address\"}],\"name\":\"addPerson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_framer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_beneficiary\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_details\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_credits\",\"type\":\"uint256\"}],\"name\":\"addPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policymakerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_constituency\",\"type\":\"uint256\"}],\"name\":\"addPolicymaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_personAddress\",\"type\":\"address\"}],\"name\":\"enrollPerson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"persons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"credits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPolcies\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"details\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"beneficiary\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"framer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCountFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votecountAgainst\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"policymakers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"constituency\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyAddress\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/iamav/Documents/GitHub/DAPP-FeedBack-System/contracts/Feedback.sol\":\"MyContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/iamav/Documents/GitHub/DAPP-FeedBack-System/contracts/Feedback.sol\":{\"keccak256\":\"0xc34f2d29d1ff9f66ba4078a6ed7a80a3934c9e53397c7116138e6f1a9e8a565e\",\"urls\":[\"bzz-raw://ec795e8d5533e75bfdf69a83cec9072b8ddd986991a6a919273d09568eebf4e8\",\"dweb:/ipfs/QmRU1RPE1GHNKanS1h74PzeyMYmNHAUaNytxPwnXpdGsWo\"]}},\"version\":1}",
  "bytecode": "0x608060405260016000806101000a81548160ff0219169083600181111561002257fe5b021790555034801561003357600080fd5b5033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006101000a81548160ff0219169083600181111561009357fe5b0217905550611d0d806100a76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636dd7d8ea1161005b5780636dd7d8ea146103865780638ada2cf6146103ca578063e30cc976146104a7578063f78f46861461050b57610088565b80630671f9151461008d57806320e986981461010f5780633abad393146101c15780634927b47a146102b0575b600080fd5b61010d600480360360a08110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506105f0565b005b6101516004803603602081101561012557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a18565b604051808881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018215151515815260200197505050505050505060405180910390f35b6102ae600480360360808110156101d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021457600080fd5b82018360208201111561022657600080fd5b8035906020019184600183028401116401000000008311171561024857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050610a87565b005b6102f2600480360360208110156102c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d97565b604051808060200185815260200184815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6103c86004803603602081101561039c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e6c565b005b61040c600480360360208110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611312565b604051808681526020018060200185815260200184815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b8381101561046857808201518184015260208101905061044d565b50505050905090810190601f1680156104955780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b610509600480360360408110156104bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ed565b005b6105ee6004803603606081101561052157600080fd5b81019080803590602001909291908035906020019064010000000081111561054857600080fd5b82018360208201111561055a57600080fd5b8035906020019184600183028401116401000000008311171561057c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061179a565b005b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611bdc602a913960400191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661073b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cb26026913960400191505060405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16156107e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611c5d6026913960400191505060405180910390fd5b81600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555083600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff0219169083151502179055508473ffffffffffffffffffffffffffffffffffffffff167f09f714ffe8bd94507f70b3ea0839c16a6a2f2164e1f24fac39eff84539a9876660405180806020018281038252601a8152602001807f416464656420506f6c69637920746f207468652053797374656d00000000000081525060200191505060405180910390a25050505050565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611bdc602a913960400191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611c066029913960400191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610c29929190611b10565b5081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff167f09f714ffe8bd94507f70b3ea0839c16a6a2f2164e1f24fac39eff84539a9876660405180806020018281038252601f8152602001807f416464656420506f6c6963794d616b657220746f207468652073797374656d0081525060200191505060405180910390a250505050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e435780601f10610e1857610100808354040283529160200191610e43565b820191906000526020600020905b815481529060010190602001808311610e2657829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff16610f11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611c83602f913960400191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16610fd3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506f6c696379206d75737420657869737420696e207468652073797374656d2181525060200191505060405180910390fd5b60008090505b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301548110156112cb578173ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401828154811061108757fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156111555750600060018111156110e057fe5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401828154811061112d57fe5b9060005260206000200160000160149054906101000a900460ff16600181111561115357fe5b145b1561126d576001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182815481106111a957fe5b9060005260206000200160000160146101000a81548160ff021916908360018111156111d157fe5b0217905550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055506112be565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c2f602e913960400191505060405180910390fd5b8080600101915050610fd9565b8173ffffffffffffffffffffffffffffffffffffffff167f06640b67015c37470a2bc2e00a76d594f6794fae0d12b9e206bc1bf369fe067660405160405180910390a25050565b6003602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113c45780601f10611399576101008083540402835291602001916113c4565b820191906000526020600020905b8154815290600101906020018083116113a757829003601f168201915b5050505050908060020154908060030154908060050160009054906101000a900460ff16905085565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4f6e6c7920436f6d6d6973696f6e65722063616e20646f20746869732100000081525060200191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16611572576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f506f6c696379206d75737420657869737421000000000000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff16611634576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f506572736f6e206d75737420657869737421000000000000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008154809291906001019190505550600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156116fc57fe5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083600181111561178f57fe5b021790555050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611bb66026913960400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff1615611903576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f506572736f6e20616c726561647920657869737473210000000000000000000081525060200191505060405180910390fd5b82600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906119a0929190611b10565b506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f09f714ffe8bd94507f70b3ea0839c16a6a2f2164e1f24fac39eff84539a9876660405180806020018281038252601c8152602001807f416464656420506572736f6e20696e746f207468652073797374656d0000000081525060200191505060405180910390a2505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b5157805160ff1916838001178555611b7f565b82800160010185558215611b7f579182015b82811115611b7e578251825591602001919060010190611b63565b5b509050611b8c9190611b90565b5090565b611bb291905b80821115611bae576000816000905550600101611b96565b5090565b9056fe4f6e6c7920436f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e214f6e6c792074686520636f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21506f6c6963796d616b657220616c72656164792065786973747320696e207468652073797374656d215468652042656e6566696369617279206973206e6f7420656e726f6c6c656420696e2074686520506f6c6963792e506f6c69637920616c72656164792065786973747320617420746869732061646472657373214f6e6c79207468652062656e65666963696172792063616e20766f746520666f722074686520466565646261636b21506f6c696379206d616b6572206d75737420657869737420696e207468652073797374656d21a264697066735822122078822bd8f044ca0848dd1461599cc118adf9edaa3def4022d15375d81531d9d664736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80636dd7d8ea1161005b5780636dd7d8ea146103865780638ada2cf6146103ca578063e30cc976146104a7578063f78f46861461050b57610088565b80630671f9151461008d57806320e986981461010f5780633abad393146101c15780634927b47a146102b0575b600080fd5b61010d600480360360a08110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506105f0565b005b6101516004803603602081101561012557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a18565b604051808881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018215151515815260200197505050505050505060405180910390f35b6102ae600480360360808110156101d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021457600080fd5b82018360208201111561022657600080fd5b8035906020019184600183028401116401000000008311171561024857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050610a87565b005b6102f2600480360360208110156102c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d97565b604051808060200185815260200184815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6103c86004803603602081101561039c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e6c565b005b61040c600480360360208110156103e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611312565b604051808681526020018060200185815260200184815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b8381101561046857808201518184015260208101905061044d565b50505050905090810190601f1680156104955780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b610509600480360360408110156104bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ed565b005b6105ee6004803603606081101561052157600080fd5b81019080803590602001909291908035906020019064010000000081111561054857600080fd5b82018360208201111561055a57600080fd5b8035906020019184600183028401116401000000008311171561057c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061179a565b005b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611bdc602a913960400191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661073b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cb26026913960400191505060405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16156107e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611c5d6026913960400191505060405180910390fd5b81600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555083600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160006101000a81548160ff0219169083151502179055508473ffffffffffffffffffffffffffffffffffffffff167f09f714ffe8bd94507f70b3ea0839c16a6a2f2164e1f24fac39eff84539a9876660405180806020018281038252601a8152602001807f416464656420506f6c69637920746f207468652053797374656d00000000000081525060200191505060405180910390a25050505050565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611bdc602a913960400191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611c066029913960400191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610c29929190611b10565b5081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff167f09f714ffe8bd94507f70b3ea0839c16a6a2f2164e1f24fac39eff84539a9876660405180806020018281038252601f8152602001807f416464656420506f6c6963794d616b657220746f207468652073797374656d0081525060200191505060405180910390a250505050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e435780601f10610e1857610100808354040283529160200191610e43565b820191906000526020600020905b815481529060010190602001808311610e2657829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff16610f11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611c83602f913960400191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16610fd3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506f6c696379206d75737420657869737420696e207468652073797374656d2181525060200191505060405180910390fd5b60008090505b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301548110156112cb578173ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401828154811061108757fe5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156111555750600060018111156110e057fe5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401828154811061112d57fe5b9060005260206000200160000160149054906101000a900460ff16600181111561115357fe5b145b1561126d576001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182815481106111a957fe5b9060005260206000200160000160146101000a81548160ff021916908360018111156111d157fe5b0217905550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055506112be565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c2f602e913960400191505060405180910390fd5b8080600101915050610fd9565b8173ffffffffffffffffffffffffffffffffffffffff167f06640b67015c37470a2bc2e00a76d594f6794fae0d12b9e206bc1bf369fe067660405160405180910390a25050565b6003602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113c45780601f10611399576101008083540402835291602001916113c4565b820191906000526020600020905b8154815290600101906020018083116113a757829003601f168201915b5050505050908060020154908060030154908060050160009054906101000a900460ff16905085565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4f6e6c7920436f6d6d6973696f6e65722063616e20646f20746869732100000081525060200191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160009054906101000a900460ff16611572576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f506f6c696379206d75737420657869737421000000000000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff16611634576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f506572736f6e206d75737420657869737421000000000000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008154809291906001019190505550600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156116fc57fe5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083600181111561178f57fe5b021790555050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611840576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611bb66026913960400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900460ff1615611903576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f506572736f6e20616c726561647920657869737473210000000000000000000081525060200191505060405180910390fd5b82600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906119a0929190611b10565b506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f09f714ffe8bd94507f70b3ea0839c16a6a2f2164e1f24fac39eff84539a9876660405180806020018281038252601c8152602001807f416464656420506572736f6e20696e746f207468652073797374656d0000000081525060200191505060405180910390a2505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b5157805160ff1916838001178555611b7f565b82800160010185558215611b7f579182015b82811115611b7e578251825591602001919060010190611b63565b5b509050611b8c9190611b90565b5090565b611bb291905b80821115611bae576000816000905550600101611b96565b5090565b9056fe4f6e6c7920436f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e214f6e6c792074686520636f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21506f6c6963796d616b657220616c72656164792065786973747320696e207468652073797374656d215468652042656e6566696369617279206973206e6f7420656e726f6c6c656420696e2074686520506f6c6963792e506f6c69637920616c72656164792065786973747320617420746869732061646472657373214f6e6c79207468652062656e65666963696172792063616e20766f746520666f722074686520466565646261636b21506f6c696379206d616b6572206d75737420657869737420696e207468652073797374656d21a264697066735822122078822bd8f044ca0848dd1461599cc118adf9edaa3def4022d15375d81531d9d664736f6c63430006000033",
  "sourceMap": "79:5975:0:-:0;;;345:22;323:44;;;;;;;;;;;;;;;;;;;;;;;;;;1995:110;8:9:-1;5:2;;;30:1;27;20:12;5:2;1995:110:0;2046:10;2032:11;;:24;;;;;;;;;;;;;;;;;;2075:20;2067:5;;:28;;;;;;;;;;;;;;;;;;;;;;;;79:5975;;;;;;",
  "deployedSourceMap": "79:5975:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;79:5975:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:759;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3875:759:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1814:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1814:43:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:641;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3043:641:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3043:641:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3043:641:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3043:641:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3043:641:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1709:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1709:52:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1709:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5128:919;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5128:919:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1910:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1910:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1910:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4678:442;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4678:442:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2282:565;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2282:565:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2282:565:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2282:565:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2282:565:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2282:565:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3875:759;4035:11;;;;;;;;;;;4021:25;;:10;:25;;;4013:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4112:12;:21;4125:7;4112:21;;;;;;;;;;;;;;;:28;;;;;;;;;;;;4104:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:8;:24;4212:14;4203:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;4202:32;4194:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4327:8;4292;:24;4301:14;4292:24;;;;;;;;;;;;;;;:32;;:43;;;;4385:12;4346:8;:24;4355:14;4346:24;;;;;;;;;;;;;;;:36;;:51;;;;4442:7;4408:8;:24;4417:14;4408:24;;;;;;;;;;;;;;;:31;;;:41;;;;;;;;;;;;;;;;;;4500:8;4460;:24;4469:14;4460:24;;;;;;;;;;;;;;;:37;;:48;;;;4553:4;4519:8;:24;4528:14;4519:24;;;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;4611:14;4575:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:759;;;;;:::o;1814:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3043:641::-;3190:11;;;;;;;;;;;3176:25;;:10;:25;;;3168:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:12;:33;3281:19;3268:33;;;;;;;;;;;;;;;:40;;;;;;;;;;;;3267:41;3259:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3408:5;3367:12;:33;3380:19;3367:33;;;;;;;;;;;;;;;:38;;:46;;;;;;;;;;;;:::i;:::-;;3463:3;3424:12;:33;3437:19;3424:33;;;;;;;;;;;;;;;:36;;:42;;;;3526:13;3477:12;:33;3490:19;3477:33;;;;;;;;;;;;;;;:46;;:62;;;;3593:4;3550:12;:33;3563:19;3550:33;;;;;;;;;;;;;;;:40;;;:47;;;;;;;;;;;;;;;;;;3656:19;3615:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:641;;;;:::o;1709:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5128:919::-;5240:7;:19;5248:10;5240:19;;;;;;;;;;;;;;;:26;;;;;;;;;;;;5232:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5335:8;:24;5344:14;5335:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5327:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5414:6;5437:1;5433:5;;5429:537;5441:7;:19;5449:10;5441:19;;;;;;;;;;;;;;;:30;;;5439:1;:32;5429:537;;;5619:14;5576:57;;:7;:19;5584:10;5576:19;;;;;;;;;;;;;;;:29;;5606:1;5576:32;;;;;;;;;;;;;;;:39;;;;;;;;;;;;:57;;;:116;;;;;5682:10;5637:55;;;;;;;;:7;:19;5645:10;5637:19;;;;;;;;;;;;;;;:29;;5667:1;5637:32;;;;;;;;;;;;;;;:41;;;;;;;;;;;;:55;;;;;;;;;5576:116;5573:383;;;5764:11;5720:7;:19;5728:10;5720:19;;;;;;;;;;;;;;;:29;;5750:1;5720:32;;;;;;;;;;;;;;;:41;;;:55;;;;;;;;;;;;;;;;;;;;;;;;5821:8;:24;5830:14;5821:24;;;;;;;;;;;;;;;:37;;;5790:7;:19;5798:10;5790:19;;;;;;;;;;;;;;;:27;;;:68;;;;;;;;;;;5573:383;;;5900:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:383;5472:3;;;;;;;5429:537;;;6024:14;6013:26;;;;;;;;;;;;5128:919;;:::o;1910:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4678:442::-;4787:11;;;;;;;;;;;4773:25;;:10;:25;;;4765:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:8;:24;4860:14;4851:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;4843:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4923:7;:23;4931:14;4923:23;;;;;;;;;;;;;;;:30;;;;;;;;;;;;4915:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4989:7;:23;4997:14;4989:23;;;;;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;5036:7;:23;5044:14;5036:23;;;;;;;;;;;;;;;:33;;5075:36;;;;;;;;5084:14;5075:36;;;;;;5100:10;5075:36;;;;;;;;;;;5036:76;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5036:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4678:442;;:::o;2282:565::-;2401:11;;;;;;;;;;;2387:25;;:10;:25;;;2379:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:7;:23;2483:14;2475:23;;;;;;;;;;;;;;;:30;;;;;;;;;;;;2474:31;2466:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2573:3;2544:7;:23;2552:14;2544:23;;;;;;;;;;;;;;;:26;;:32;;;;2618:5;2587:7;:23;2595:14;2587:23;;;;;;;;;;;;;;;:28;;:36;;;;;;;;;;;;:::i;:::-;;2671:1;2634:7;:23;2642:14;2634:23;;;;;;;;;;;;;;;:34;;:38;;;;2717:1;2683:7;:23;2691:14;2683:23;;;;;;;;;;;;;;;:31;;:35;;;;2762:4;2729:7;:23;2737:14;2729:23;;;;;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;2822:14;2784:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2282:565;;;:::o;79:5975::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\n//Smart contract for Decentralized Feedback System\r\ncontract MyContract{\r\n\r\n\r\n    //to check whether the Person has voted or not\r\n    enum State {NONE,VOTED}\r\n\r\n    //to check whether the Contract is active or not\r\n    enum contractState {ACTIVE,INACTIVE}\r\n\r\n    //initially set to inactive\r\n    contractState state = contractState.INACTIVE;\r\n\r\n    address private commisioner;\r\n\r\n    event votedEvent (\r\n        address indexed _policyAddress\r\n    );\r\n\r\n    event added(string _message, address indexed _address);\r\n\r\n    //defining structure of the Policymaker\r\n    struct Policymaker\r\n    {\r\n\r\n        string name;\r\n        uint id;\r\n        uint constituency;\r\n        bool exists;\r\n    }\r\n\r\n    //defining Structure of the Policy\r\n    struct Policy\r\n    {\r\n        bytes32 details; //stores only the hash of the actual statement\r\n        bytes32 beneficiary; //stores only the hash of the actual beneficiary criteria\r\n        address framer;\r\n        uint creditPoints;\r\n        uint voteCountFor;\r\n        uint votecountAgainst;\r\n        bool exists;\r\n\r\n    }\r\n\r\n    //defining the structure of the feedback\r\n    struct Feedback\r\n    {\r\n        address policy;\r\n        State feedback;\r\n    }\r\n\r\n    //defining the structure of the person\r\n    struct Person\r\n    {\r\n        uint id;\r\n        string name;\r\n        //initializing a dynamic array for the feedbacks\r\n        //stores the feedback everytime the person votes in for a policy with the profile\r\n        uint credits;\r\n        uint numPolcies; //counts the number of policies the person is enrolled in\r\n        Feedback[] feedbacks;\r\n        bool exists;\r\n    }\r\n\r\n    //mapping of the address to the policymaker\r\n    mapping (address => Policymaker) public policymakers;\r\n\r\n    //mapping of the address to the person\r\n    mapping (address => Policy) public policies;\r\n\r\n    //mapping of the address to the policy\r\n    mapping(address => Person) public persons;\r\n\r\n    //setting the state to active\r\n    constructor() public\r\n    {\r\n        commisioner = msg.sender;\r\n        state = contractState.ACTIVE;\r\n\r\n    }\r\n\r\n    //setting up the permissions an passing thee _personAddress as a key\r\n    //initializing the parameters of the function\r\n    //mapping of the address to the Person\r\n    function addPerson(uint _id, string memory _name, address _personAddress) public\r\n    {\r\n        require(msg.sender == commisioner, \"Only Commisioner can take this action!\");\r\n        require(!persons[_personAddress].exists,\"Person already exists!\");\r\n\r\n        persons[_personAddress].id = _id;\r\n        persons[_personAddress].name = _name;\r\n        persons[_personAddress].numPolcies = 0;\r\n        persons[_personAddress].credits = 0;\r\n        persons[_personAddress].exists = true;\r\n\r\n        emit added(\"Added Person into the system\", _personAddress);\r\n\r\n    }\r\n\r\n        //setting up the permissions an passing thee _personAddress as a key\r\n        //initializing the parameters of the function\r\n        //mapping of the address to the Policymaker\r\n\r\n    function addPolicymaker(address _policymakerAddress,string memory _name, uint _id,uint _constituency) public\r\n    {\r\n        require(msg.sender == commisioner, \"Only the commisioner can take this action!\");\r\n        require(!policymakers[_policymakerAddress].exists, \"Policymaker already exists in the system!\");\r\n\r\n        policymakers[_policymakerAddress].name = _name;\r\n        policymakers[_policymakerAddress].id = _id;\r\n        policymakers[_policymakerAddress].constituency = _constituency;\r\n        policymakers[_policymakerAddress].exists = true;\r\n\r\n        emit added(\"Added PolicyMaker to the system\", _policymakerAddress);\r\n    }\r\n\r\n        //setting up the permissions an passing thee _personAddress as a key\r\n        //initializing the parameters of the function\r\n        //mapping of the address to the Policy\r\n\r\n    function addPolicy( address _policyAddress,address _framer, bytes32 _beneficiary, bytes32 _details, uint _credits) public\r\n    {\r\n        require(msg.sender == commisioner, \"Only the commisioner can take this action!\");\r\n        require(policymakers[_framer].exists, \"Policy maker must exist in the system!\");\r\n        require(!policies[_policyAddress].exists, \"Policy already exists at this address!\");\r\n\r\n\r\n        policies[_policyAddress].details = _details;\r\n        policies[_policyAddress].beneficiary = _beneficiary;\r\n        policies[_policyAddress].framer = _framer;\r\n        policies[_policyAddress].creditPoints = _credits;\r\n        policies[_policyAddress].exists = true;\r\n\r\n        emit added(\"Added Policy to the System\", _policyAddress);\r\n    }\r\n\r\n    //enrolls person into a Policy\r\n    function enrollPerson(address _policyAddress,address _personAddress) public {\r\n        require(msg.sender == commisioner, \"Only Commisioner can do this!\");\r\n        require(policies[_policyAddress].exists,\"Policy must exist!\");\r\n        require(persons[_personAddress].exists, \"Person must exist!\");\r\n\r\n        persons[_personAddress].numPolcies++;\r\n        persons[_personAddress].feedbacks.push(Feedback(_policyAddress, State.NONE));\r\n    }\r\n\r\n    function vote(address _policyAddress) public\r\n    {\r\n      //require person has not voted before\r\n      require(persons[msg.sender].exists, \"Only the beneficiary can vote for the Feedback!\");\r\n      require(policies[_policyAddress].exists, \"Policy must exist in the system!\");\r\n\r\n      uint i;\r\n      for(i = 0;i<persons[msg.sender].numPolcies;i++){\r\n\r\n          //check if the person is enrolled in the policy and has not yet voted.\r\n          if(persons[msg.sender].feedbacks[i].policy == _policyAddress && persons[msg.sender].feedbacks[i].feedback == State.NONE)\r\n          {\r\n            persons[msg.sender].feedbacks[i].feedback = State.VOTED;\r\n            persons[msg.sender].credits += policies[_policyAddress].creditPoints;\r\n          }\r\n          else\r\n          revert(\"The Beneficiary is not enrolled in the Policy.\");\r\n      }\r\n\r\n      // trigger voted event\r\n        emit votedEvent(_policyAddress);\r\n    }\r\n\r\n\r\n}\r\n",
  "sourcePath": "C:/Users/iamav/Documents/GitHub/DAPP-FeedBack-System/contracts/Feedback.sol",
  "ast": {
    "absolutePath": "/C/Users/iamav/Documents/GitHub/DAPP-FeedBack-System/contracts/Feedback.sol",
    "exportedSymbols": {
      "MyContract": [
        448
      ]
    },
    "id": 449,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 448,
        "linearizedBaseContracts": [
          448
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MyContract.State",
            "id": 4,
            "members": [
              {
                "id": 2,
                "name": "NONE",
                "nodeType": "EnumValue",
                "src": "173:4:0"
              },
              {
                "id": 3,
                "name": "VOTED",
                "nodeType": "EnumValue",
                "src": "178:5:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "161:23:0"
          },
          {
            "canonicalName": "MyContract.contractState",
            "id": 7,
            "members": [
              {
                "id": 5,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "266:6:0"
              },
              {
                "id": 6,
                "name": "INACTIVE",
                "nodeType": "EnumValue",
                "src": "273:8:0"
              }
            ],
            "name": "contractState",
            "nodeType": "EnumDefinition",
            "src": "246:36:0"
          },
          {
            "constant": false,
            "id": 11,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "323:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_contractState_$7",
              "typeString": "enum MyContract.contractState"
            },
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "contractState",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7,
              "src": "323:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_contractState_$7",
                "typeString": "enum MyContract.contractState"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 9,
                "name": "contractState",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7,
                "src": "345:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_contractState_$7_$",
                  "typeString": "type(enum MyContract.contractState)"
                }
              },
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "INACTIVE",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "345:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_contractState_$7",
                "typeString": "enum MyContract.contractState"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "name": "commisioner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "376:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 17,
            "name": "votedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17,
                  "src": "440:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:48:0"
            },
            "src": "412:66:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "added",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23,
                  "src": "498:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23,
                  "src": "515:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:43:0"
            },
            "src": "486:55:0"
          },
          {
            "canonicalName": "MyContract.Policymaker",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 25,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "631:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "631:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "653:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "653:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "name": "constituency",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "671:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "699:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "699:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Policymaker",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "594:124:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyContract.Policy",
            "id": 47,
            "members": [
              {
                "constant": false,
                "id": 34,
                "name": "details",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "796:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 33,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "796:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "name": "beneficiary",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "869:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 35,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "869:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "name": "framer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "957:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "957:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "name": "creditPoints",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "982:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "982:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "name": "voteCountFor",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "1010:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1010:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "votecountAgainst",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "1038:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1038:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "1070:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 45,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1070:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "766:325:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyContract.Feedback",
            "id": 52,
            "members": [
              {
                "constant": false,
                "id": 49,
                "name": "policy",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 52,
                "src": "1177:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 48,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "name": "feedback",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 52,
                "src": "1202:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$4",
                  "typeString": "enum MyContract.State"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 50,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4,
                  "src": "1202:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$4",
                    "typeString": "enum MyContract.State"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Feedback",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "1145:79:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyContract.Person",
            "id": 66,
            "members": [
              {
                "constant": false,
                "id": 54,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1306:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1306:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1324:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "name": "credits",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1495:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1495:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "name": "numPolcies",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1518:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 59,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "name": "feedbacks",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1602:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage_ptr",
                  "typeString": "struct MyContract.Feedback[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 61,
                    "name": "Feedback",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 52,
                    "src": "1602:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Feedback_$52_storage_ptr",
                      "typeString": "struct MyContract.Feedback"
                    }
                  },
                  "id": 62,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1602:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage_ptr",
                    "typeString": "struct MyContract.Feedback[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1633:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 64,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1633:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Person",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "1276:376:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4927b47a",
            "id": 70,
            "name": "policymakers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "1709:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
              "typeString": "mapping(address => struct MyContract.Policymaker)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1718:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1709:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                "typeString": "mapping(address => struct MyContract.Policymaker)"
              },
              "valueType": {
                "contractScope": null,
                "id": 68,
                "name": "Policymaker",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 32,
                "src": "1729:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policymaker_$32_storage_ptr",
                  "typeString": "struct MyContract.Policymaker"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20e98698",
            "id": 74,
            "name": "policies",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "1814:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
              "typeString": "mapping(address => struct MyContract.Policy)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1823:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1814:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                "typeString": "mapping(address => struct MyContract.Policy)"
              },
              "valueType": {
                "contractScope": null,
                "id": 72,
                "name": "Policy",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 47,
                "src": "1834:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policy_$47_storage_ptr",
                  "typeString": "struct MyContract.Policy"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ada2cf6",
            "id": 78,
            "name": "persons",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "1910:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
              "typeString": "mapping(address => struct MyContract.Person)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1918:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1910:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                "typeString": "mapping(address => struct MyContract.Person)"
              },
              "valueType": {
                "contractScope": null,
                "id": 76,
                "name": "Person",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 66,
                "src": "1929:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Person_$66_storage_ptr",
                  "typeString": "struct MyContract.Person"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "2021:84:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "commisioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "2032:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "2046:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2046:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2032:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2067:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contractState_$7",
                        "typeString": "enum MyContract.contractState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "contractState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2075:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_contractState_$7_$",
                          "typeString": "type(enum MyContract.contractState)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2075:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contractState_$7",
                        "typeString": "enum MyContract.contractState"
                      }
                    },
                    "src": "2067:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_contractState_$7",
                      "typeString": "enum MyContract.contractState"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2006:2:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:0:0"
            },
            "scope": 448,
            "src": "1995:110:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2368:479:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2387:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2387:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2401:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2387:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920436f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4712a5cfdbdce72b726041cffe20990f0331b5b556c00788ee5ef78e373b191a",
                          "typeString": "literal_string \"Only Commisioner can take this action!\""
                        },
                        "value": "Only Commisioner can take this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4712a5cfdbdce72b726041cffe20990f0331b5b556c00788ee5ef78e373b191a",
                          "typeString": "literal_string \"Only Commisioner can take this action!\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "2379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:76:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2474:31:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "persons",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "2475:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                "typeString": "mapping(address => struct MyContract.Person storage ref)"
                              }
                            },
                            "id": 112,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "_personAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "2483:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2475:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Person_$66_storage",
                              "typeString": "struct MyContract.Person storage ref"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65,
                          "src": "2475:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506572736f6e20616c72656164792065786973747321",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2506:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c24720b206647dcb834cfda6acffc18e3ed5c7dfb50b97de6d5651ba45f020a8",
                          "typeString": "literal_string \"Person already exists!\""
                        },
                        "value": "Person already exists!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c24720b206647dcb834cfda6acffc18e3ed5c7dfb50b97de6d5651ba45f020a8",
                          "typeString": "literal_string \"Person already exists!\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "2466:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2544:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2552:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2544:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "2544:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2573:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2544:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2544:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 127,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 126,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2595:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2587:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "2587:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2618:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2587:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 132,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2634:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 134,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2642:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2634:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numPolcies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "2634:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2671:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2634:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2634:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2683:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2691:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2683:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "credits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "2683:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2717:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2683:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2683:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2729:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 148,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2737:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2729:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65,
                      "src": "2729:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2762:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2729:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:37:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416464656420506572736f6e20696e746f207468652073797374656d",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2790:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e67a7fd59fb977db6c6a99e27c0a4a083a576ef2cb235b965743424352d6b0bf",
                          "typeString": "literal_string \"Added Person into the system\""
                        },
                        "value": "Added Person into the system"
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "_personAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2822:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e67a7fd59fb977db6c6a99e27c0a4a083a576ef2cb235b965743424352d6b0bf",
                          "typeString": "literal_string \"Added Person into the system\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 153,
                      "name": "added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2784:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2784:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "EmitStatement",
                  "src": "2779:58:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f78f4686",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPerson",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 159,
                  "src": "2301:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 159,
                  "src": "2311:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "_personAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 159,
                  "src": "2332:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2300:55:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:0"
            },
            "scope": 448,
            "src": "2282:565:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3157:527:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "3176:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3176:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "3190:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3176:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3203:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        },
                        "value": "Only the commisioner can take this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "3168:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3168:80:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3267:41:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 179,
                              "name": "policymakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "3268:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                                "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 180,
                              "name": "_policymakerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "3281:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3268:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                              "typeString": "struct MyContract.Policymaker storage ref"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3268:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c6963796d616b657220616c72656164792065786973747320696e207468652073797374656d21",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3310:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cf8acdc68c498feca662ccc76c5d16e52e67479dfcb404f6cccb7973671d5f0",
                          "typeString": "literal_string \"Policymaker already exists in the system!\""
                        },
                        "value": "Policymaker already exists in the system!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cf8acdc68c498feca662ccc76c5d16e52e67479dfcb404f6cccb7973671d5f0",
                          "typeString": "literal_string \"Policymaker already exists in the system!\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "3259:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:95:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3367:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 189,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3380:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3367:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "3367:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3408:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3367:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 194,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3424:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 196,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3437:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3424:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "3424:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3463:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3424:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 201,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3477:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 203,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3490:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3477:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "constituency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "3477:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "_constituency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3526:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3477:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:62:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3550:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 210,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3563:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3550:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3550:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3593:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3550:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:47:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416464656420506f6c6963794d616b657220746f207468652073797374656d",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3621:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0debbaa4d9ba9be42fcbdcf959c03a8302074f610a1a60be2afc9d0c88d394a2",
                          "typeString": "literal_string \"Added PolicyMaker to the system\""
                        },
                        "value": "Added PolicyMaker to the system"
                      },
                      {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "_policymakerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3656:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0debbaa4d9ba9be42fcbdcf959c03a8302074f610a1a60be2afc9d0c88d394a2",
                          "typeString": "literal_string \"Added PolicyMaker to the system\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 215,
                      "name": "added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3615:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3615:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "EmitStatement",
                  "src": "3610:66:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3abad393",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPolicymaker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "_policymakerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3067:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3067:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3095:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3095:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3116:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "_constituency",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3125:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3066:78:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3157:0:0"
            },
            "scope": 448,
            "src": "3043:641:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4002:632:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "4021:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4021:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4035:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4021:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        },
                        "value": "Only the commisioner can take this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4013:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4013:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "4013:80:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 243,
                            "name": "policymakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4112:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                              "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                            }
                          },
                          "id": 245,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 244,
                            "name": "_framer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4125:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4112:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                            "typeString": "struct MyContract.Policymaker storage ref"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "4112:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379206d616b6572206d75737420657869737420696e207468652073797374656d21",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4142:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3f7896a210659b236eefcdc992f1397e62cef7b02fff5e24a4b8c30dc8d56ca",
                          "typeString": "literal_string \"Policy maker must exist in the system!\""
                        },
                        "value": "Policy maker must exist in the system!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3f7896a210659b236eefcdc992f1397e62cef7b02fff5e24a4b8c30dc8d56ca",
                          "typeString": "literal_string \"Policy maker must exist in the system!\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4104:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "4104:79:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4202:32:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 251,
                              "name": "policies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "4203:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                                "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 252,
                              "name": "_policyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "4212:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4203:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$47_storage",
                              "typeString": "struct MyContract.Policy storage ref"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "4203:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c69637920616c7265616479206578697374732061742074686973206164647265737321",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4236:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5460f625c1438e28015f17acec24cf25d203d0a5414f157c82a5d6e666f8959",
                          "typeString": "literal_string \"Policy already exists at this address!\""
                        },
                        "value": "Policy already exists at this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5460f625c1438e28015f17acec24cf25d203d0a5414f157c82a5d6e666f8959",
                          "typeString": "literal_string \"Policy already exists at this address!\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4194:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4194:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4292:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4301:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4292:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "details",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "4292:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "_details",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4327:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4292:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4346:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 268,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4355:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4346:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "4346:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 270,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "4385:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4346:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "4346:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4408:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 275,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4417:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4408:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "framer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "4408:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "_framer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "4442:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4408:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "4408:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4460:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 282,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4469:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4460:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creditPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "4460:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "_credits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4500:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4460:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "4460:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4519:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4528:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4519:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "4519:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4553:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4519:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416464656420506f6c69637920746f207468652053797374656d",
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fc070ca6a94580a80da1861e1f9bb359306150363f066e78def233300386e2d",
                          "typeString": "literal_string \"Added Policy to the System\""
                        },
                        "value": "Added Policy to the System"
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_policyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "4611:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8fc070ca6a94580a80da1861e1f9bb359306150363f066e78def233300386e2d",
                          "typeString": "literal_string \"Added Policy to the System\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 294,
                      "name": "added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4575:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4575:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "4570:56:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0671f915",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3895:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "name": "_framer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3918:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 227,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3935:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "_details",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3957:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "name": "_credits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3975:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3893:96:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:0"
            },
            "scope": 448,
            "src": "3875:759:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "4754:366:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "4773:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4773:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4787:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4773:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920436f6d6d6973696f6e65722063616e20646f207468697321",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4800:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54c90c8e7a54ff320d52230af6ded011b80bc1790cfb09b3ba92ad3b081681d6",
                          "typeString": "literal_string \"Only Commisioner can do this!\""
                        },
                        "value": "Only Commisioner can do this!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54c90c8e7a54ff320d52230af6ded011b80bc1790cfb09b3ba92ad3b081681d6",
                          "typeString": "literal_string \"Only Commisioner can do this!\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4765:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4765:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "4851:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                              "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                            }
                          },
                          "id": 318,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 317,
                            "name": "_policyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "4860:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4851:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$47_storage",
                            "typeString": "struct MyContract.Policy storage ref"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46,
                        "src": "4851:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379206d75737420657869737421",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4883:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9f50641c36f0d22e38eda4a84da0f86dcd63fabd0b754e4723aef758abf0fcc",
                          "typeString": "literal_string \"Policy must exist!\""
                        },
                        "value": "Policy must exist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9f50641c36f0d22e38eda4a84da0f86dcd63fabd0b754e4723aef758abf0fcc",
                          "typeString": "literal_string \"Policy must exist!\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4843:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4843:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "persons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "4923:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                              "typeString": "mapping(address => struct MyContract.Person storage ref)"
                            }
                          },
                          "id": 326,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 325,
                            "name": "_personAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "4931:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4923:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$66_storage",
                            "typeString": "struct MyContract.Person storage ref"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
                        "src": "4923:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506572736f6e206d75737420657869737421",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4955:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e04a80deac153486adcd4e27d86ab39a32a6d75cc3c8ed990e3dc28aa547a2f",
                          "typeString": "literal_string \"Person must exist!\""
                        },
                        "value": "Person must exist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e04a80deac153486adcd4e27d86ab39a32a6d75cc3c8ed990e3dc28aa547a2f",
                          "typeString": "literal_string \"Person must exist!\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4915:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "4915:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4989:36:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4989:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 333,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "4997:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4989:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numPolcies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "4989:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "_policyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "5084:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 344,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4,
                              "src": "5100:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$4_$",
                                "typeString": "type(enum MyContract.State)"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NONE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5100:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$4",
                              "typeString": "enum MyContract.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$4",
                              "typeString": "enum MyContract.State"
                            }
                          ],
                          "id": 342,
                          "name": "Feedback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5075:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Feedback_$52_storage_ptr_$",
                            "typeString": "type(struct MyContract.Feedback storage pointer)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5075:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Feedback_$52_memory",
                          "typeString": "struct MyContract.Feedback memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Feedback_$52_memory",
                          "typeString": "struct MyContract.Feedback memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 337,
                            "name": "persons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5036:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                              "typeString": "mapping(address => struct MyContract.Person storage ref)"
                            }
                          },
                          "id": 339,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 338,
                            "name": "_personAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5044:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5036:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$66_storage",
                            "typeString": "struct MyContract.Person storage ref"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feedbacks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63,
                        "src": "5036:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                          "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5036:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Feedback_$52_storage_$returns$__$",
                        "typeString": "function (struct MyContract.Feedback storage ref)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5036:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5036:76:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e30cc976",
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrollPerson",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "4700:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "_personAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "4723:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4723:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4699:47:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4754:0:0"
            },
            "scope": 448,
            "src": "4678:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "5178:869:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "persons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                              "typeString": "mapping(address => struct MyContract.Person storage ref)"
                            }
                          },
                          "id": 359,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 357,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "5248:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5248:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5240:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$66_storage",
                            "typeString": "struct MyContract.Person storage ref"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
                        "src": "5240:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652062656e65666963696172792063616e20766f746520666f722074686520466565646261636b21",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5268:49:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea2da077ed9615ee39254bdae0a90a538f05b625ee92dfa90eeacf3a1230dbc",
                          "typeString": "literal_string \"Only the beneficiary can vote for the Feedback!\""
                        },
                        "value": "Only the beneficiary can vote for the Feedback!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aea2da077ed9615ee39254bdae0a90a538f05b625ee92dfa90eeacf3a1230dbc",
                          "typeString": "literal_string \"Only the beneficiary can vote for the Feedback!\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "5232:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5232:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5232:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "5335:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                              "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                            }
                          },
                          "id": 367,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "_policyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "5344:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5335:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$47_storage",
                            "typeString": "struct MyContract.Policy storage ref"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46,
                        "src": "5335:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379206d75737420657869737420696e207468652073797374656d21",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5368:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5603b6076bb67b1abdb853451d4ddd31d57d4c0f64e513740676175bbc6f77",
                          "typeString": "literal_string \"Policy must exist in the system!\""
                        },
                        "value": "Policy must exist in the system!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5603b6076bb67b1abdb853451d4ddd31d57d4c0f64e513740676175bbc6f77",
                          "typeString": "literal_string \"Policy must exist in the system!\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "5327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5327:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "5327:76:0"
                },
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 446,
                      "src": "5414:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 372,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5414:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5414:6:0"
                },
                {
                  "body": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "5476:490:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 389,
                                      "name": "persons",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "5576:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                      }
                                    },
                                    "id": 392,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 390,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5584:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5584:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5576:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Person_$66_storage",
                                      "typeString": "struct MyContract.Person storage ref"
                                    }
                                  },
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feedbacks",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "5576:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                                    "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                                  }
                                },
                                "id": 395,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 394,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
                                  "src": "5606:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5576:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Feedback_$52_storage",
                                  "typeString": "struct MyContract.Feedback storage ref"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49,
                              "src": "5576:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 397,
                              "name": "_policyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "5619:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5576:57:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_State_$4",
                              "typeString": "enum MyContract.State"
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 399,
                                      "name": "persons",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "5637:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                      }
                                    },
                                    "id": 402,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 400,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5645:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5645:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5637:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Person_$66_storage",
                                      "typeString": "struct MyContract.Person storage ref"
                                    }
                                  },
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feedbacks",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "5637:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                                    "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                                  }
                                },
                                "id": 405,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 404,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
                                  "src": "5667:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5637:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Feedback_$52_storage",
                                  "typeString": "struct MyContract.Feedback storage ref"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feedback",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51,
                              "src": "5637:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$4",
                                "typeString": "enum MyContract.State"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 407,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4,
                                "src": "5682:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$4_$",
                                  "typeString": "type(enum MyContract.State)"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NONE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5682:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$4",
                                "typeString": "enum MyContract.State"
                              }
                            },
                            "src": "5637:55:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5576:116:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "5468652042656e6566696369617279206973206e6f7420656e726f6c6c656420696e2074686520506f6c6963792e",
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5907:48:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9c7afa558af23b024bc50d8006c6d183b90e5fd2f9e5577d62e0a4a27f9ae1ad",
                                  "typeString": "literal_string \"The Beneficiary is not enrolled in the Policy.\""
                                },
                                "value": "The Beneficiary is not enrolled in the Policy."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9c7afa558af23b024bc50d8006c6d183b90e5fd2f9e5577d62e0a4a27f9ae1ad",
                                  "typeString": "literal_string \"The Beneficiary is not enrolled in the Policy.\""
                                }
                              ],
                              "id": 435,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                525,
                                526
                              ],
                              "referencedDeclaration": 526,
                              "src": "5900:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5900:56:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 438,
                          "nodeType": "ExpressionStatement",
                          "src": "5900:56:0"
                        },
                        "id": 439,
                        "nodeType": "IfStatement",
                        "src": "5573:383:0",
                        "trueBody": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "5705:167:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 411,
                                          "name": "persons",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "5720:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                          }
                                        },
                                        "id": 414,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 412,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 520,
                                            "src": "5728:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 413,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5728:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5720:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Person_$66_storage",
                                          "typeString": "struct MyContract.Person storage ref"
                                        }
                                      },
                                      "id": 415,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feedbacks",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 63,
                                      "src": "5720:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                                        "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                                      }
                                    },
                                    "id": 417,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 416,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
                                      "src": "5750:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5720:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Feedback_$52_storage",
                                      "typeString": "struct MyContract.Feedback storage ref"
                                    }
                                  },
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "feedback",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51,
                                  "src": "5720:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$4",
                                    "typeString": "enum MyContract.State"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 419,
                                    "name": "State",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4,
                                    "src": "5764:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_State_$4_$",
                                      "typeString": "type(enum MyContract.State)"
                                    }
                                  },
                                  "id": 420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "VOTED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5764:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$4",
                                    "typeString": "enum MyContract.State"
                                  }
                                },
                                "src": "5720:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$4",
                                  "typeString": "enum MyContract.State"
                                }
                              },
                              "id": 422,
                              "nodeType": "ExpressionStatement",
                              "src": "5720:55:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 423,
                                      "name": "persons",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "5790:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                      }
                                    },
                                    "id": 426,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 424,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5798:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5798:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5790:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Person_$66_storage",
                                      "typeString": "struct MyContract.Person storage ref"
                                    }
                                  },
                                  "id": 427,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "credits",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "5790:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 428,
                                      "name": "policies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74,
                                      "src": "5821:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                                      }
                                    },
                                    "id": 430,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 429,
                                      "name": "_policyAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 352,
                                      "src": "5830:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5821:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$47_storage",
                                      "typeString": "struct MyContract.Policy storage ref"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "creditPoints",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "5821:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5790:68:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "5790:68:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "5439:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5441:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 383,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5449:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5449:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5441:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numPolcies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "5441:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5439:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 441,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "5433:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5437:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5433:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 378,
                    "nodeType": "ExpressionStatement",
                    "src": "5433:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5472:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "5472:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 388,
                    "nodeType": "ExpressionStatement",
                    "src": "5472:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5429:537:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "_policyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "6024:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "votedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "6013:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "EmitStatement",
                  "src": "6008:31:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6dd7d8ea",
            "id": 447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 447,
                  "src": "5142:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5141:24:0"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:0"
            },
            "scope": 448,
            "src": "5128:919:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 449,
        "src": "79:5975:0"
      }
    ],
    "src": "0:6056:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/iamav/Documents/GitHub/DAPP-FeedBack-System/contracts/Feedback.sol",
    "exportedSymbols": {
      "MyContract": [
        448
      ]
    },
    "id": 449,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 448,
        "linearizedBaseContracts": [
          448
        ],
        "name": "MyContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MyContract.State",
            "id": 4,
            "members": [
              {
                "id": 2,
                "name": "NONE",
                "nodeType": "EnumValue",
                "src": "173:4:0"
              },
              {
                "id": 3,
                "name": "VOTED",
                "nodeType": "EnumValue",
                "src": "178:5:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "161:23:0"
          },
          {
            "canonicalName": "MyContract.contractState",
            "id": 7,
            "members": [
              {
                "id": 5,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "266:6:0"
              },
              {
                "id": 6,
                "name": "INACTIVE",
                "nodeType": "EnumValue",
                "src": "273:8:0"
              }
            ],
            "name": "contractState",
            "nodeType": "EnumDefinition",
            "src": "246:36:0"
          },
          {
            "constant": false,
            "id": 11,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "323:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_contractState_$7",
              "typeString": "enum MyContract.contractState"
            },
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "contractState",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7,
              "src": "323:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_contractState_$7",
                "typeString": "enum MyContract.contractState"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 9,
                "name": "contractState",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7,
                "src": "345:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_contractState_$7_$",
                  "typeString": "type(enum MyContract.contractState)"
                }
              },
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "INACTIVE",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "345:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_contractState_$7",
                "typeString": "enum MyContract.contractState"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "name": "commisioner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "376:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 17,
            "name": "votedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17,
                  "src": "440:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:48:0"
            },
            "src": "412:66:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "added",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23,
                  "src": "498:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23,
                  "src": "515:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:43:0"
            },
            "src": "486:55:0"
          },
          {
            "canonicalName": "MyContract.Policymaker",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 25,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "631:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "631:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "653:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "653:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "name": "constituency",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "671:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 32,
                "src": "699:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "699:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Policymaker",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "594:124:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyContract.Policy",
            "id": 47,
            "members": [
              {
                "constant": false,
                "id": 34,
                "name": "details",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "796:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 33,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "796:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "name": "beneficiary",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "869:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 35,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "869:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "name": "framer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "957:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "957:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "name": "creditPoints",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "982:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "982:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "name": "voteCountFor",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "1010:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1010:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "votecountAgainst",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "1038:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1038:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 47,
                "src": "1070:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 45,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1070:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "766:325:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyContract.Feedback",
            "id": 52,
            "members": [
              {
                "constant": false,
                "id": 49,
                "name": "policy",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 52,
                "src": "1177:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 48,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "name": "feedback",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 52,
                "src": "1202:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$4",
                  "typeString": "enum MyContract.State"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 50,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4,
                  "src": "1202:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$4",
                    "typeString": "enum MyContract.State"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Feedback",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "1145:79:0",
            "visibility": "public"
          },
          {
            "canonicalName": "MyContract.Person",
            "id": 66,
            "members": [
              {
                "constant": false,
                "id": 54,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1306:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1306:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1324:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "name": "credits",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1495:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1495:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "name": "numPolcies",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1518:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 59,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "name": "feedbacks",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1602:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage_ptr",
                  "typeString": "struct MyContract.Feedback[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 61,
                    "name": "Feedback",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 52,
                    "src": "1602:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Feedback_$52_storage_ptr",
                      "typeString": "struct MyContract.Feedback"
                    }
                  },
                  "id": 62,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1602:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage_ptr",
                    "typeString": "struct MyContract.Feedback[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 66,
                "src": "1633:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 64,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1633:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Person",
            "nodeType": "StructDefinition",
            "scope": 448,
            "src": "1276:376:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4927b47a",
            "id": 70,
            "name": "policymakers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "1709:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
              "typeString": "mapping(address => struct MyContract.Policymaker)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1718:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1709:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                "typeString": "mapping(address => struct MyContract.Policymaker)"
              },
              "valueType": {
                "contractScope": null,
                "id": 68,
                "name": "Policymaker",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 32,
                "src": "1729:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policymaker_$32_storage_ptr",
                  "typeString": "struct MyContract.Policymaker"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20e98698",
            "id": 74,
            "name": "policies",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "1814:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
              "typeString": "mapping(address => struct MyContract.Policy)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1823:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1814:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                "typeString": "mapping(address => struct MyContract.Policy)"
              },
              "valueType": {
                "contractScope": null,
                "id": 72,
                "name": "Policy",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 47,
                "src": "1834:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policy_$47_storage_ptr",
                  "typeString": "struct MyContract.Policy"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ada2cf6",
            "id": 78,
            "name": "persons",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 448,
            "src": "1910:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
              "typeString": "mapping(address => struct MyContract.Person)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1918:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1910:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                "typeString": "mapping(address => struct MyContract.Person)"
              },
              "valueType": {
                "contractScope": null,
                "id": 76,
                "name": "Person",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 66,
                "src": "1929:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Person_$66_storage_ptr",
                  "typeString": "struct MyContract.Person"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "2021:84:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "commisioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "2032:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "2046:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2046:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2032:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2067:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contractState_$7",
                        "typeString": "enum MyContract.contractState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "contractState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2075:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_contractState_$7_$",
                          "typeString": "type(enum MyContract.contractState)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2075:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_contractState_$7",
                        "typeString": "enum MyContract.contractState"
                      }
                    },
                    "src": "2067:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_contractState_$7",
                      "typeString": "enum MyContract.contractState"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2006:2:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:0:0"
            },
            "scope": 448,
            "src": "1995:110:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2368:479:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2387:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2387:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2401:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2387:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920436f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4712a5cfdbdce72b726041cffe20990f0331b5b556c00788ee5ef78e373b191a",
                          "typeString": "literal_string \"Only Commisioner can take this action!\""
                        },
                        "value": "Only Commisioner can take this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4712a5cfdbdce72b726041cffe20990f0331b5b556c00788ee5ef78e373b191a",
                          "typeString": "literal_string \"Only Commisioner can take this action!\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "2379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2379:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:76:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2474:31:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "persons",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "2475:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                "typeString": "mapping(address => struct MyContract.Person storage ref)"
                              }
                            },
                            "id": 112,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "_personAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "2483:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2475:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Person_$66_storage",
                              "typeString": "struct MyContract.Person storage ref"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65,
                          "src": "2475:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506572736f6e20616c72656164792065786973747321",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2506:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c24720b206647dcb834cfda6acffc18e3ed5c7dfb50b97de6d5651ba45f020a8",
                          "typeString": "literal_string \"Person already exists!\""
                        },
                        "value": "Person already exists!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c24720b206647dcb834cfda6acffc18e3ed5c7dfb50b97de6d5651ba45f020a8",
                          "typeString": "literal_string \"Person already exists!\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "2466:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2544:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2552:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2544:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "2544:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2573:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2544:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2544:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 127,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 126,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2595:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2587:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "2587:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2618:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2587:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 132,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2634:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 134,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2642:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2634:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numPolcies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "2634:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2671:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2634:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2634:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2683:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2691:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2683:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "credits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "2683:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2717:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2683:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2683:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2729:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 148,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2737:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2729:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65,
                      "src": "2729:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2762:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2729:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:37:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416464656420506572736f6e20696e746f207468652073797374656d",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2790:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e67a7fd59fb977db6c6a99e27c0a4a083a576ef2cb235b965743424352d6b0bf",
                          "typeString": "literal_string \"Added Person into the system\""
                        },
                        "value": "Added Person into the system"
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "_personAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2822:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e67a7fd59fb977db6c6a99e27c0a4a083a576ef2cb235b965743424352d6b0bf",
                          "typeString": "literal_string \"Added Person into the system\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 153,
                      "name": "added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2784:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2784:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "EmitStatement",
                  "src": "2779:58:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f78f4686",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPerson",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 159,
                  "src": "2301:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 159,
                  "src": "2311:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "_personAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 159,
                  "src": "2332:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2300:55:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:0"
            },
            "scope": 448,
            "src": "2282:565:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "3157:527:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "3176:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3176:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "3190:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3176:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3203:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        },
                        "value": "Only the commisioner can take this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "3168:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3168:80:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3267:41:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 179,
                              "name": "policymakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "3268:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                                "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                              }
                            },
                            "id": 181,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 180,
                              "name": "_policymakerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "3281:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3268:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                              "typeString": "struct MyContract.Policymaker storage ref"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3268:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c6963796d616b657220616c72656164792065786973747320696e207468652073797374656d21",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3310:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cf8acdc68c498feca662ccc76c5d16e52e67479dfcb404f6cccb7973671d5f0",
                          "typeString": "literal_string \"Policymaker already exists in the system!\""
                        },
                        "value": "Policymaker already exists in the system!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cf8acdc68c498feca662ccc76c5d16e52e67479dfcb404f6cccb7973671d5f0",
                          "typeString": "literal_string \"Policymaker already exists in the system!\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "3259:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:95:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3367:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 189,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3380:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3367:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "3367:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3408:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3367:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 194,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3424:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 196,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3437:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3424:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "3424:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3463:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3424:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 201,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3477:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 203,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3490:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3477:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "constituency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "3477:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "_constituency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3526:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3477:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:62:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "policymakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3550:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                          }
                        },
                        "id": 210,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "_policymakerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3563:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3550:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                          "typeString": "struct MyContract.Policymaker storage ref"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "3550:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3593:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3550:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:47:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416464656420506f6c6963794d616b657220746f207468652073797374656d",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3621:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0debbaa4d9ba9be42fcbdcf959c03a8302074f610a1a60be2afc9d0c88d394a2",
                          "typeString": "literal_string \"Added PolicyMaker to the system\""
                        },
                        "value": "Added PolicyMaker to the system"
                      },
                      {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "_policymakerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3656:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0debbaa4d9ba9be42fcbdcf959c03a8302074f610a1a60be2afc9d0c88d394a2",
                          "typeString": "literal_string \"Added PolicyMaker to the system\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 215,
                      "name": "added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3615:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3615:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "EmitStatement",
                  "src": "3610:66:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3abad393",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPolicymaker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "_policymakerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3067:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3067:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3095:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3095:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3116:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "_constituency",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 221,
                  "src": "3125:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3066:78:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3157:0:0"
            },
            "scope": 448,
            "src": "3043:641:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4002:632:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "4021:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4021:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4035:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4021:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6d6d6973696f6e65722063616e2074616b65207468697320616374696f6e21",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        },
                        "value": "Only the commisioner can take this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_494a4aeb087e0eb9c30644f56e3426c8b69d52608a009d0edb65e9ba8adf173f",
                          "typeString": "literal_string \"Only the commisioner can take this action!\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4013:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4013:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "4013:80:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 243,
                            "name": "policymakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4112:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policymaker_$32_storage_$",
                              "typeString": "mapping(address => struct MyContract.Policymaker storage ref)"
                            }
                          },
                          "id": 245,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 244,
                            "name": "_framer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4125:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4112:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policymaker_$32_storage",
                            "typeString": "struct MyContract.Policymaker storage ref"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "4112:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379206d616b6572206d75737420657869737420696e207468652073797374656d21",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4142:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3f7896a210659b236eefcdc992f1397e62cef7b02fff5e24a4b8c30dc8d56ca",
                          "typeString": "literal_string \"Policy maker must exist in the system!\""
                        },
                        "value": "Policy maker must exist in the system!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3f7896a210659b236eefcdc992f1397e62cef7b02fff5e24a4b8c30dc8d56ca",
                          "typeString": "literal_string \"Policy maker must exist in the system!\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4104:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "4104:79:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4202:32:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 251,
                              "name": "policies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "4203:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                                "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 252,
                              "name": "_policyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "4212:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4203:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$47_storage",
                              "typeString": "struct MyContract.Policy storage ref"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "4203:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c69637920616c7265616479206578697374732061742074686973206164647265737321",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4236:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5460f625c1438e28015f17acec24cf25d203d0a5414f157c82a5d6e666f8959",
                          "typeString": "literal_string \"Policy already exists at this address!\""
                        },
                        "value": "Policy already exists at this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5460f625c1438e28015f17acec24cf25d203d0a5414f157c82a5d6e666f8959",
                          "typeString": "literal_string \"Policy already exists at this address!\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4194:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4194:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4292:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4301:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4292:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "details",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "4292:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "_details",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4327:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4292:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4346:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 268,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4355:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4346:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "beneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "4346:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 270,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "4385:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4346:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "4346:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4408:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 275,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4417:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4408:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "framer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "4408:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "_framer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "4442:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4408:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "4408:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4460:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 282,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4469:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4460:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creditPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "4460:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "_credits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4500:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4460:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "4460:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4519:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                            "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "_policyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "4528:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4519:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$47_storage",
                          "typeString": "struct MyContract.Policy storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "4519:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4553:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4519:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416464656420506f6c69637920746f207468652053797374656d",
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fc070ca6a94580a80da1861e1f9bb359306150363f066e78def233300386e2d",
                          "typeString": "literal_string \"Added Policy to the System\""
                        },
                        "value": "Added Policy to the System"
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_policyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "4611:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8fc070ca6a94580a80da1861e1f9bb359306150363f066e78def233300386e2d",
                          "typeString": "literal_string \"Added Policy to the System\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 294,
                      "name": "added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4575:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4575:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "4570:56:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0671f915",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3895:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "name": "_framer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3918:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 227,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3935:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "_details",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3957:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "name": "_credits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "3975:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3893:96:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:0"
            },
            "scope": 448,
            "src": "3875:759:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "4754:366:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "4773:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4773:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "commisioner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4787:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4773:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920436f6d6d6973696f6e65722063616e20646f207468697321",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4800:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54c90c8e7a54ff320d52230af6ded011b80bc1790cfb09b3ba92ad3b081681d6",
                          "typeString": "literal_string \"Only Commisioner can do this!\""
                        },
                        "value": "Only Commisioner can do this!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54c90c8e7a54ff320d52230af6ded011b80bc1790cfb09b3ba92ad3b081681d6",
                          "typeString": "literal_string \"Only Commisioner can do this!\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4765:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4765:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "4851:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                              "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                            }
                          },
                          "id": 318,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 317,
                            "name": "_policyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "4860:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4851:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$47_storage",
                            "typeString": "struct MyContract.Policy storage ref"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46,
                        "src": "4851:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379206d75737420657869737421",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4883:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9f50641c36f0d22e38eda4a84da0f86dcd63fabd0b754e4723aef758abf0fcc",
                          "typeString": "literal_string \"Policy must exist!\""
                        },
                        "value": "Policy must exist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9f50641c36f0d22e38eda4a84da0f86dcd63fabd0b754e4723aef758abf0fcc",
                          "typeString": "literal_string \"Policy must exist!\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4843:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4843:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 324,
                            "name": "persons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "4923:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                              "typeString": "mapping(address => struct MyContract.Person storage ref)"
                            }
                          },
                          "id": 326,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 325,
                            "name": "_personAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "4931:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4923:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$66_storage",
                            "typeString": "struct MyContract.Person storage ref"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
                        "src": "4923:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506572736f6e206d75737420657869737421",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4955:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e04a80deac153486adcd4e27d86ab39a32a6d75cc3c8ed990e3dc28aa547a2f",
                          "typeString": "literal_string \"Person must exist!\""
                        },
                        "value": "Person must exist!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e04a80deac153486adcd4e27d86ab39a32a6d75cc3c8ed990e3dc28aa547a2f",
                          "typeString": "literal_string \"Person must exist!\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "4915:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "4915:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4989:36:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4989:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 333,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "_personAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "4997:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4989:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numPolcies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "4989:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "_policyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "5084:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 344,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4,
                              "src": "5100:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$4_$",
                                "typeString": "type(enum MyContract.State)"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NONE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5100:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$4",
                              "typeString": "enum MyContract.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$4",
                              "typeString": "enum MyContract.State"
                            }
                          ],
                          "id": 342,
                          "name": "Feedback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5075:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Feedback_$52_storage_ptr_$",
                            "typeString": "type(struct MyContract.Feedback storage pointer)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5075:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Feedback_$52_memory",
                          "typeString": "struct MyContract.Feedback memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Feedback_$52_memory",
                          "typeString": "struct MyContract.Feedback memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 337,
                            "name": "persons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5036:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                              "typeString": "mapping(address => struct MyContract.Person storage ref)"
                            }
                          },
                          "id": 339,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 338,
                            "name": "_personAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5044:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5036:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$66_storage",
                            "typeString": "struct MyContract.Person storage ref"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feedbacks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63,
                        "src": "5036:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                          "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5036:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Feedback_$52_storage_$returns$__$",
                        "typeString": "function (struct MyContract.Feedback storage ref)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5036:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5036:76:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e30cc976",
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrollPerson",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "4700:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "_personAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "4723:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4723:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4699:47:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4754:0:0"
            },
            "scope": 448,
            "src": "4678:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "5178:869:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "persons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "5240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                              "typeString": "mapping(address => struct MyContract.Person storage ref)"
                            }
                          },
                          "id": 359,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 357,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "5248:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5248:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5240:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$66_storage",
                            "typeString": "struct MyContract.Person storage ref"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
                        "src": "5240:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652062656e65666963696172792063616e20766f746520666f722074686520466565646261636b21",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5268:49:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea2da077ed9615ee39254bdae0a90a538f05b625ee92dfa90eeacf3a1230dbc",
                          "typeString": "literal_string \"Only the beneficiary can vote for the Feedback!\""
                        },
                        "value": "Only the beneficiary can vote for the Feedback!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aea2da077ed9615ee39254bdae0a90a538f05b625ee92dfa90eeacf3a1230dbc",
                          "typeString": "literal_string \"Only the beneficiary can vote for the Feedback!\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "5232:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5232:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5232:86:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "5335:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                              "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                            }
                          },
                          "id": 367,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "_policyAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "5344:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5335:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$47_storage",
                            "typeString": "struct MyContract.Policy storage ref"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46,
                        "src": "5335:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379206d75737420657869737420696e207468652073797374656d21",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5368:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5603b6076bb67b1abdb853451d4ddd31d57d4c0f64e513740676175bbc6f77",
                          "typeString": "literal_string \"Policy must exist in the system!\""
                        },
                        "value": "Policy must exist in the system!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5603b6076bb67b1abdb853451d4ddd31d57d4c0f64e513740676175bbc6f77",
                          "typeString": "literal_string \"Policy must exist in the system!\""
                        }
                      ],
                      "id": 364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        523,
                        524
                      ],
                      "referencedDeclaration": 524,
                      "src": "5327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5327:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "5327:76:0"
                },
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 446,
                      "src": "5414:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 372,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5414:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5414:6:0"
                },
                {
                  "body": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "5476:490:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 389,
                                      "name": "persons",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "5576:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                      }
                                    },
                                    "id": 392,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 390,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5584:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5584:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5576:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Person_$66_storage",
                                      "typeString": "struct MyContract.Person storage ref"
                                    }
                                  },
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feedbacks",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "5576:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                                    "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                                  }
                                },
                                "id": 395,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 394,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
                                  "src": "5606:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5576:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Feedback_$52_storage",
                                  "typeString": "struct MyContract.Feedback storage ref"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49,
                              "src": "5576:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 397,
                              "name": "_policyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "5619:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5576:57:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_State_$4",
                              "typeString": "enum MyContract.State"
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 399,
                                      "name": "persons",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "5637:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                      }
                                    },
                                    "id": 402,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 400,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5645:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5645:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5637:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Person_$66_storage",
                                      "typeString": "struct MyContract.Person storage ref"
                                    }
                                  },
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "feedbacks",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "5637:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                                    "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                                  }
                                },
                                "id": 405,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 404,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
                                  "src": "5667:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5637:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Feedback_$52_storage",
                                  "typeString": "struct MyContract.Feedback storage ref"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feedback",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51,
                              "src": "5637:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$4",
                                "typeString": "enum MyContract.State"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 407,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4,
                                "src": "5682:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$4_$",
                                  "typeString": "type(enum MyContract.State)"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NONE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5682:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$4",
                                "typeString": "enum MyContract.State"
                              }
                            },
                            "src": "5637:55:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5576:116:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "5468652042656e6566696369617279206973206e6f7420656e726f6c6c656420696e2074686520506f6c6963792e",
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5907:48:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9c7afa558af23b024bc50d8006c6d183b90e5fd2f9e5577d62e0a4a27f9ae1ad",
                                  "typeString": "literal_string \"The Beneficiary is not enrolled in the Policy.\""
                                },
                                "value": "The Beneficiary is not enrolled in the Policy."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9c7afa558af23b024bc50d8006c6d183b90e5fd2f9e5577d62e0a4a27f9ae1ad",
                                  "typeString": "literal_string \"The Beneficiary is not enrolled in the Policy.\""
                                }
                              ],
                              "id": 435,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                525,
                                526
                              ],
                              "referencedDeclaration": 526,
                              "src": "5900:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5900:56:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 438,
                          "nodeType": "ExpressionStatement",
                          "src": "5900:56:0"
                        },
                        "id": 439,
                        "nodeType": "IfStatement",
                        "src": "5573:383:0",
                        "trueBody": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "5705:167:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 411,
                                          "name": "persons",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "5720:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                          }
                                        },
                                        "id": 414,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 412,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 520,
                                            "src": "5728:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 413,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5728:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5720:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Person_$66_storage",
                                          "typeString": "struct MyContract.Person storage ref"
                                        }
                                      },
                                      "id": 415,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "feedbacks",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 63,
                                      "src": "5720:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Feedback_$52_storage_$dyn_storage",
                                        "typeString": "struct MyContract.Feedback storage ref[] storage ref"
                                      }
                                    },
                                    "id": 417,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 416,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
                                      "src": "5750:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5720:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Feedback_$52_storage",
                                      "typeString": "struct MyContract.Feedback storage ref"
                                    }
                                  },
                                  "id": 418,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "feedback",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51,
                                  "src": "5720:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$4",
                                    "typeString": "enum MyContract.State"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 419,
                                    "name": "State",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4,
                                    "src": "5764:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_State_$4_$",
                                      "typeString": "type(enum MyContract.State)"
                                    }
                                  },
                                  "id": 420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "VOTED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5764:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$4",
                                    "typeString": "enum MyContract.State"
                                  }
                                },
                                "src": "5720:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$4",
                                  "typeString": "enum MyContract.State"
                                }
                              },
                              "id": 422,
                              "nodeType": "ExpressionStatement",
                              "src": "5720:55:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 423,
                                      "name": "persons",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "5790:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Person storage ref)"
                                      }
                                    },
                                    "id": 426,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 424,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5798:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5798:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5790:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Person_$66_storage",
                                      "typeString": "struct MyContract.Person storage ref"
                                    }
                                  },
                                  "id": 427,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "credits",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "5790:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 428,
                                      "name": "policies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74,
                                      "src": "5821:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Policy_$47_storage_$",
                                        "typeString": "mapping(address => struct MyContract.Policy storage ref)"
                                      }
                                    },
                                    "id": 430,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 429,
                                      "name": "_policyAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 352,
                                      "src": "5830:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5821:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Policy_$47_storage",
                                      "typeString": "struct MyContract.Policy storage ref"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "creditPoints",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "5821:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5790:68:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "5790:68:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "5439:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 380,
                          "name": "persons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5441:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$66_storage_$",
                            "typeString": "mapping(address => struct MyContract.Person storage ref)"
                          }
                        },
                        "id": 383,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5449:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5449:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5441:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$66_storage",
                          "typeString": "struct MyContract.Person storage ref"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numPolcies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "5441:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5439:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 441,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "5433:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5437:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5433:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 378,
                    "nodeType": "ExpressionStatement",
                    "src": "5433:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5472:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "5472:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 388,
                    "nodeType": "ExpressionStatement",
                    "src": "5472:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5429:537:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "_policyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "6024:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "votedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "6013:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "EmitStatement",
                  "src": "6008:31:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6dd7d8ea",
            "id": 447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "name": "_policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 447,
                  "src": "5142:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5141:24:0"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:0"
            },
            "scope": 448,
            "src": "5128:919:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 449,
        "src": "79:5975:0"
      }
    ],
    "src": "0:6056:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2019-12-25T14:28:36.568Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}